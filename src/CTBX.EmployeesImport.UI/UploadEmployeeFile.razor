@page "/file-upload"
@inject ISnackbar Snackbar
@inject UploadEmployeesService Service

<MudPaper Class="d-flex flex-column align-center py-4">
    <MudText Typo="Typo.h4" GutterBottom="true">Employee File Upload</MudText>
    <MudText Typo="Typo.body1" Class="mb-4 text-center">
        Please upload a CSV or TXT file to import your employees into the database.
        Maximum 10 at once per upload.
        Supported formats: .csv or .txt.
        Each file must follow the required format.
    </MudText>

    <MudFileUpload Accept=".txt, .csv"
                   T="IReadOnlyList<IBrowserFile>"
                   FilesChanged="UploadFiles">
        <ActivatorContent>
            <MudButton Variant="Variant.Filled"
                       Color="Color.Success"
                       StartIcon="@Icons.Material.Filled.UploadFile">
                Upload Files
            </MudButton>
        </ActivatorContent>
    </MudFileUpload>
</MudPaper>


@code {
    private async Task UploadFiles(IReadOnlyList<IBrowserFile> files)
    {
        List<Task> tasks = [];
        foreach (var file in files)
        {
            // try
            // {
            tasks.Add(Service.UploadFile(file));

            //     Snackbar.Add("Upload succedded",Severity.Success);
            // }
            // catch
            // {

            //     Snackbar.Add("something went wrong, try again.",, Severity.Error);
            // }
        }


        try
        {
            await Task.WhenAll(tasks);

            Snackbar.Add("Upload succedded", Severity.Success);
        }
        catch
        {

            Snackbar.Add("something went wrong, try again.",Severity.Error);
        }
    }



}